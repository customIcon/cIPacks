name: Build and deploy pack

on:
  push:
    paths:
      - 'packFolder/**'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Check if the branch is main or not
      - name: Check if on main branch
        run: |
          if [[ "${GITHUB_REF}" != "refs/heads/main" ]]; then
            echo "Not on main branch, exiting."
            exit 0
          fi

      # Find the pushed directory
      - name: Find pushed directory
        id: find-dir
        run: |
          dir=$(find ${{ env.packFolder }} -maxdepth 1 -type d -name "push-*" -printf '%T@ %p\n' | sort -n | tail -1 | cut -f2- -d" ")
          echo "::set-output name=dir::$dir"
        if: github.event_name == 'push' && !startsWith(github.event.head_commit.message, 'Merge')

      # Modify cIPackStore.json
      - name: Modify cIPacksStore.json
        if: steps.find-dir.outputs.dir != ''
        run: |
          pack_name=$(jq -r '.name' ${{ steps.find-dir.outputs.dir }}/cIManifest.json)
          pack_description=$(jq -r '.description' ${{ steps.find-dir.outputs.dir }}/cIManifest.json)
          pack_author=$(jq -r '.pack_author' ${{ steps.find-dir.outputs.dir }}/cIManifest.json)
          icon_author=$(jq -r '.maker' ${{ steps.find-dir.outputs.dir }}/cIManifest.json)
          filename="${pack_name// /_}.zip"
          cd ${{ env.packFolder }}
          zip -r $filename ${{ steps.find-dir.outputs.dir }}
          mv $filename ../packs
          rm -rf ${{ steps.find-dir.outputs.dir }}
          cipacks=()
          if [ -f cIPacksStore.json ]; then
            cipacks=$(cat cIPacksStore.json)
          fi
          cipacks=$(echo $cipacks | jq --arg pack_name "$pack_name" --arg pack_description "$pack_description" --arg pack_author "$pack_author" --arg icon_author "$icon_author" --arg filename "$filename" '. + [{name: $pack_name, description: $pack_description, author: $pack_author, icon_author: $icon_author, filename: $filename}]')
          echo $cipacks > cIPacksStore.json

      # Zip the pack
      - name: Zip pack
        if: steps.find_directory.outputs.directory != ''
        run: |
          cd ${{ steps.find_directory.outputs.directory }}
          zip -r ../${{ github.sha }}.zip .

      # Upload the zip file
      - name: Upload pack
        if: steps.find_directory.outputs.directory != ''
        uses: actions/upload-artifact@v2
        with:
          name: pack
          path: ${{ github.sha }}.zip

      # Delete the pushed directory
      - name: Delete pushed directory
        if: steps.find_directory.outputs.directory != ''
        run: |
          rm -rf ${{ steps.find_directory.outputs.directory }}
