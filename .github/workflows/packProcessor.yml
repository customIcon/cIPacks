name: Pack Builder

on:
  push:
    branches: [ main ]
    paths:
      - 'packFolder/**'
      - '.github/workflows/**'
    # Only run if the push is not from a forked repository
    # This is a new feature in v2
    # See: https://github.blog/changelog/2021-08-23-github-actions-skip-pull-request-and-forked-workflow-runs-by-default/
    if: "!github.event.repository.fork"

env:
  PACKS_DIR: ./packs
  CI_MANIFEST_FILE: cIManifest.json
  CI_PACKS_STORE_FILE: cIPacksStore.json

jobs:
  # Build the pack and add it to the packs directory
  build_pack:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Find pushed directory
        id: find_directory
        run: |
          cd $GITHUB_WORKSPACE/packFolder
          echo ::set-output name=dir::$(find . -type d -maxdepth 1 -mindepth 1 | head -1)

      - name: Zip pack directory
        id: zip_directory
        run: |
          cd $GITHUB_WORKSPACE/packFolder
          zip -r ${{ env.PACKS_DIR }}/${{ steps.find_directory.outputs.dir }}.zip ${{ steps.find_directory.outputs.dir }}
        shell: bash

      - name: Delete pack directory
        run: rm -rf $GITHUB_WORKSPACE/packFolder/${{ steps.find_directory.outputs.dir }}
        shell: bash

  # Modify the cIPacksStore.json file
  modify_cipacksstore:
    needs: build_pack
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Find cIManifest.json file
        id: find_manifest
        run: |
          cd $GITHUB_WORKSPACE/packFolder/${{ steps.build_pack.outputs.find_directory }}
          echo ::set-output name=file::$(find . -type f -name ${{ env.CI_MANIFEST_FILE }} | head -1 | sed 's|./||')

      - name: Read cIManifest.json file
        id: read_manifest
        uses: azure/cli@v1
        with:
          azcliversion: 2.0.72
          inlineScript: |
            content=$(cat ${{ steps.find_manifest.outputs.file }})
            echo ::set-output name=data::$content

      - name: Check if pack already exists
        id: check_pack_exists
        run: |
          pack_exists=$(jq --arg name "${{ fromJson(steps.read_manifest.outputs.data).name }}" '.[] | select(.name == $name)' ${{ env.CI_PACKS_STORE_FILE }})
          if [ ! -z "$pack_exists" ]; then
            echo "Pack already exists in ${{ env.CI_PACKS_STORE_FILE }}. Skipping..."
            exit 78
          fi
        shell: bash

      - name: Update cIPacksStore.json file
        if: ${{ steps.check_pack_exists.outcome != 'skipped' }}
        run: |
          jq --argjson data "${{ fromJson(steps.read_manifest.outputs.data) }}" '. += [$data]' ${{ env.CI_PACKS_STORE_FILE }} | sponge ${{ env.CI_PACKS_STORE_FILE }}
        shell: bash
