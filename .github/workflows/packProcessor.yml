name: Build and Deploy Packs

on:
  push:
    paths:
      - "packFolder/**"

env:
  packsStoreFile: "cIPacksStore.json"
  packDir: "packs"

jobs:
  build_pack:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' && contains(github.event.paths, 'packFolder/') }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "14.x"

      - name: Install Dependencies
        run: |
          cd packFolder
          npm install

      - name: Get pack name
        id: pack_name
        run: |
          echo "::set-output name=packname::$(jq -r '.name' packFolder/cIManifest.json)"
        shell: bash

      - name: Zip and move pack folder
        run: |
          cd packFolder
          zip -r "${{ env.packDir }}/${{ steps.pack_name.outputs.packname }}.cIPack" ./*
          mv "${{ steps.pack_name.outputs.packname }}" "${{ env.packDir }}/"
        env:
          packDir: ${{ env.packDir }}

  update_packs_store:
    runs-on: ubuntu-latest
    needs: build_pack
    if: ${{ needs.build_pack.result == 'success' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get pack data
        id: pack_data
        run: |
          echo "::set-output name=packdata::$(jq -n --arg name "${{ needs.build_pack.outputs.packname }}" --arg author "$(jq -r '.pack_author' packFolder/cIManifest.json)" --arg icon_author "$(jq -r '.maker' packFolder/cIManifest.json)" --arg desc "$(jq -r '.description' packFolder/cIManifest.json)" '{name: $name, description: $desc, author: $author, icon_author: $icon_author, filename: ($name + ".cIPack")}')"
        
      - name: Update packs store
        uses: gr2m/create-or-update-file@v2.6.0
        with:
          path: ${{ env.packsStoreFile }}
          message: "Add pack ${{ needs.build_pack.outputs.packname }}"
          content: "${{ steps.pack_data.outputs.packdata }}"
          updater: github-actions
          update_method: append
