name: Pack Processor
on:
  push:
    branches: [ main ]
    paths:
      - "${{ env.packFolder }}/**/cIManifest.json"
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2.4.2
        with:
          node-version: '14.x'

      - name: Install dependencies
        run: |
          npm install
          npm install -g yarn

      - name: Find pushed directory
        id: findDirectory
        run: |
          echo "::set-output name=directory::$(dirname $(find ${{ env.packFolder }} -name cIManifest.json -print -quit))"

      - name: Read cIManifest.json
        id: readManifest
        run: |
          echo "::set-output name=manifest::$(cat ${{ steps.findDirectory.outputs.directory }}/cIManifest.json)"

      - name: Extract pack name from manifest
        id: extractPackName
        run: |
          echo "::set-output name=packName::$(echo ${{ steps.readManifest.outputs.manifest }} | jq -r '.name')"

      - name: Extract pack description from manifest
        id: extractPackDescription
        run: |
          echo "::set-output name=packDescription::$(echo ${{ steps.readManifest.outputs.manifest }} | jq -r '.description')"

      - name: Extract pack author from manifest
        id: extractPackAuthor
        run: |
          echo "::set-output name=packAuthor::$(echo ${{ steps.readManifest.outputs.manifest }} | jq -r '.pack_author')"

      - name: Extract icon author from manifest
        id: extractIconAuthor
        run: |
          echo "::set-output name=iconAuthor::$(echo ${{ steps.readManifest.outputs.manifest }} | jq -r '.maker')"

      - name: Generate filename
        id: generateFilename
        run: |
          echo "::set-output name=filename::${{ steps.extractPackName.outputs.packName }}.zip"

      - name: Create zip file
        id: createZipFile
        run: |
          cd ${{ steps.findDirectory.outputs.directory }}
          zip -r ../${{ steps.generateFilename.outputs.filename }} .

      - name: Upload zip file
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.generateFilename.outputs.filename }}
          path: ./packs/${{ steps.generateFilename.outputs.filename }}

      - name: Update cIPacksStore.json
        if: ${{ github.event_name == 'push' && !github.event.repository.fork }}
        run: |
          cd ${{ github.workspace }}
          if ! test -f "cIPacksStore.json"; then
            echo '[]' > cIPacksStore.json
          fi

          packName=$(jq -r '.name' ${{ steps.findDirectory.outputs.directory }}/cIManifest.json)
          packDescription=$(jq -r '.description' ${{ steps.findDirectory.outputs.directory }}/cIManifest.json)
          packAuthor=$(jq -r '.pack_author' ${{ steps.findDirectory.outputs.directory }}/cIManifest.json)
